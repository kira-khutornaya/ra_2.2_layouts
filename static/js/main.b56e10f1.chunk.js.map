{"version":3,"sources":["models/ProductModel.js","data.js","IconSwitch.js","Shop/ShopCard.js","CardsView.js","Shop/ShopItem.js","ListView.js","Store.js","App.js","reportWebVitals.js","index.js"],"names":["ProductModel","id","name","price","color","img","this","products","IconSwitch","icon","onSwitch","className","type","onClick","ShopCard","card","src","alt","href","CardsView","cards","map","ShopItem","item","ListView","items","Store","useState","cardMode","setMode","mode","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b56e10f1.chunk.js","sourcesContent":["export default class ProductModel {\n  constructor(id, name, price, color, img) {\n    this.id = id;\n    this.name = name;\n    this.price = price;\n    this.color = color;\n    this.img = img;\n  }\n}\n","import ProductModel from './models/ProductModel';\n\nconst products = [\n  new ProductModel(1, 'Nike Metcon 2', '130', 'red', 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/1.jpg'),\n\n  new ProductModel(2, 'Nike Metcon 2', '130', 'green', 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/2.jpg'),\n\n  new ProductModel(3, 'Nike Metcon 2', '130', 'blue', 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/3.jpg'),\n\n  new ProductModel(4, 'Nike Metcon 2', '130', 'black', 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/4.jpg'),\n\n  new ProductModel(5, 'Nike free run', '170', 'black', 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/7.jpg'),\n\n  new ProductModel(6, 'Nike Metcon 3', '150', 'green', 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/5.jpg'),\n];\n\nexport default products;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction IconSwitch({ icon, onSwitch }) {\n  return (\n    <div className=\"store__control\">\n      <button className=\"store-control__button\" type=\"button\" onClick={onSwitch}>\n        <span className=\"material-icons\">{icon}</span>\n      </button>\n    </div>\n  );\n}\n\nIconSwitch.propTypes = {\n  icon: PropTypes.string.isRequired,\n  onSwitch: PropTypes.func.isRequired,\n};\n\nexport default IconSwitch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductModel from '../models/ProductModel';\n\nfunction ShopCard({ card }) {\n  const {\n    name, color, img, price,\n  } = card;\n\n  return (\n    <article className=\"store__card\">\n      <img className=\"store-card__img\" src={img} alt=\"\" />\n\n      <div className=\"store-card__content\">\n        <header className=\"store-card__header\">\n          <h3 className=\"store-card__name\">\n            <a className=\"store-card-name__link\" href=\"#0\">{name}</a>\n          </h3>\n\n          <div className=\"store-card__text\">\n            <p>{color}</p>\n          </div>\n        </header>\n\n        <footer className=\"store-card__footer\">\n          <div className=\"store-card__prices\">\n            <span className=\"store-card__price store-card__new-price\">\n              $\n              {price}\n            </span>\n          </div>\n          <button className=\"store-card__add-button button\" type=\"button\">Add to cart</button>\n        </footer>\n      </div>\n    </article>\n  );\n}\n\nShopCard.propTypes = {\n  card: PropTypes.instanceOf(ProductModel).isRequired,\n};\n\nexport default ShopCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductModel from './models/ProductModel';\nimport ShopCard from './Shop/ShopCard';\n\nfunction CardsView({ cards }) {\n  return (\n    <div className=\"store__cards\">\n      {cards.map((card) => <ShopCard card={card} key={card.id} />)}\n    </div>\n  );\n}\n\nCardsView.propTypes = {\n  cards: PropTypes.arrayOf(\n    PropTypes.instanceOf(ProductModel),\n  ).isRequired,\n};\n\nexport default CardsView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductModel from '../models/ProductModel';\n\nfunction ShopItem({ item }) {\n  const {\n    name, color, img, price,\n  } = item;\n\n  return (\n    <article className=\"store__item\">\n      <img className=\"store-item__img\" src={img} alt=\"\" />\n\n      <h3 className=\"store-card__name\">\n        <a className=\"store-card-name__link\" href=\"#0\">{name}</a>\n      </h3>\n\n      <div className=\"store-card__text\">\n        <p>{color}</p>\n      </div>\n\n      <div className=\"store-item__prices\">\n        <span className=\"store-card__price store-card__new-price\">\n          $\n          {price}\n        </span>\n      </div>\n      <button className=\"store-item__add-button button\" type=\"button\">Add to cart</button>\n    </article>\n  );\n}\n\nShopItem.propTypes = {\n  item: PropTypes.instanceOf(ProductModel).isRequired,\n};\n\nexport default ShopItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductModel from './models/ProductModel';\nimport ShopItem from './Shop/ShopItem';\n\nfunction ListView({ items }) {\n  return (\n    <div className=\"store__cards\">\n      {items.map((item) => <ShopItem item={item} key={item.id} />)}\n    </div>\n  );\n}\n\nListView.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.instanceOf(ProductModel).isRequired,\n  ).isRequired,\n};\n\nexport default ListView;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductModel from './models/ProductModel';\nimport IconSwitch from './IconSwitch';\nimport CardsView from './CardsView';\nimport ListView from './ListView';\n\nfunction Store({ products }) {\n  const [cardMode, setMode] = useState(true);\n  const onSwitch = () => {\n    setMode((mode) => !mode);\n  };\n\n  return (\n    <div className=\"store__wrapper\">\n      <div className=\"store\">\n        <IconSwitch icon={cardMode ? 'view_list' : 'view_module'} onSwitch={onSwitch} />\n        {cardMode ? <CardsView cards={products} /> : <ListView items={products} />}\n      </div>\n    </div>\n  );\n}\n\nStore.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.instanceOf(ProductModel).isRequired,\n  ).isRequired,\n};\n\nexport default Store;\n","import React from 'react';\nimport './App.css';\nimport products from './data';\nimport Store from './Store';\n\nfunction App() {\n  return (\n    <Store products={products} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}